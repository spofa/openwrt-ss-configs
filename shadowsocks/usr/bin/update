#!/bin/sh
LOG="/var/log/update.log"

remoteDir=https://raw.githubusercontent.com/gnu4cn/openwrt-ss-configs/master/shadowsocks
time="echo $(date +'%F %H:%M:%S')"

dnsmasqReload=0
shadowsocksReload=0
fileListChanged=0
TRIES=4

servers="/etc/servers.conf"

# change wireless option
wireless () {
    /sbin/uci set wireless.@wifi-device[0].channel=auto
    /sbin/uci set wireless.@wifi-device[0].txpower=20
    /sbin/uci commit wireless
    /sbin/wifi
}

# update scripts and configs
getRemoteFile () {
    get_file_tries=0
    file_fetched=0

    until [ $file_fetched -eq 1 ] || [ $get_file_tries -gt $TRIES ]
    do
        file=$1
        tmpFile="/tmp/"`echo $file | awk '{sub(/.*\//,x)}'1`".tmp"

        wget -4 --no-check-certificate -O $tmpFile $remoteDir$file

        if [ -e $tmpFile ] && [ `cat $tmpFile|wc -l` -gt 0 ]; then
            file_fetched=1

            mv $tmpFile $file
            if [ $2 -lt 4 ]; then
                dnsmasqReload=1
            elif [ $2 -eq 4 ]; then
                /etc/init.d/cron reload
            elif [ $2 -eq 5 ] || [ $2 -eq 6 ]; then
                chmod +x $file
                shadowsocksReload=1
            elif [ $2 -eq 7 ]; then
                shadowsocksReload=1
            elif [ $2 -eq 8 ]; then
                chmod +x $file
            elif [ $2 -eq 9 ]; then
                shadowsocksReload=1
                echo '&0875pHl' | gpg --batch --yes --passphrase-fd 0 --output $servers --decrypt $file
            elif [ $2 -eq 10 ]; then
                /etc/init.d/dropbear reload
            elif [ $2 -eq 11 ]; then
                chmod +x $file;
            elif [ $2 -eq 12 ]; then
                /etc/init.d/firewall reload
            fi;

            echo `eval $time`" - "$file" change applied." >> $LOG
        else
            echo `eval $time`" - "$file" fetch failed." >> $LOG
        fi;
    done;
}

file_list_fetched=0
get_file_list_tries=0

until [ $file_list_fetched -eq 1 ] || [ $get_file_list_tries -gt $TRIES ]
do
    fileList="/etc/fileList.conf"
    tmpFileList="/tmp/fileList.conf.tmp"

    wget -4 --no-check-certificate -O $tmpFileList $remoteDir$fileList

    if [ -e $tmpFileList ] && [ `cat $tmpFileList | wc -l` -gt 0 ]; then
        file_list_fetched=1

        newFiles=`cat $tmpFileList`

        count=0

        if [ -e $fileList ]; then
            for newFile in $newFiles;
            do
                newFilePath=`echo $newFile|awk '{split($0,a,":"); print a[1];}'`
                newFileMd5sum=`echo $newFile|awk '{split($0,a,":"); print a[2];}'`

                targetFile=`cat $fileList | grep $newFilePath`

                if test -z "targetFile"; then
                    fileListChanged=1
                    getRemoteFile $newFilePath $count
                else
                    oldFileMd5sum=`echo $targetFile|awk '{split($0,a,":"); print a[2];}'`
                    if [ "$oldFileMd5sum" = "$newFileMd5sum" ]; then
                        :
                    else
                        fileListChanged=1
                        getRemoteFile $newFilePath $count
                    fi;
                fi;
                count=$((count+1))
            done;
        else
            fileListChanged=1
            for file in $newFiles;
            do
                filePath=`echo $file|awk '{split($0,a,":"); print a[1];}'`
                getRemoteFile $filePath $count

                count=$((count+1))
            done;
        fi;
    else
        echo `eval $time`" - "$fileList" fetch failed. " >> $LOG
    fi;
done

if [ $fileListChanged -eq 1 ]; then
    mv $tmpFileList $fileList
    echo `eval $time`" - "$fileList" change applied." >> $LOG
fi;

if [ $shadowsocksReload -eq 1 ]; then
    /etc/init.d/shadowsocks reload
    dnsmasqReload=0
fi;

if [ $dnsmasqReload -eq 1 ]; then
    /etc/init.d/dnsmasq reload
fi;

wireless
